{"version":3,"sources":["images/driver-male.svg","images/driver-famale.svg","images/waiter.svg","images/waitres.svg","images/chef-male.svg","images/chef-famale.svg","store/index.js","store/employees/reducer.js","store/employees/types.js","store/employees/actions.js","services/make-request.js","components/logo/index.js","components/container/index.js","components/menu/index.js","components/header/index.js","components/footer/index.js","components/page-wrapper/index.js","components/page-title/index.js","components/dropdown/index.js","components/checkbox/index.js","components/filters/index.js","components/card/index.js","pages/main-page/index.js","components/page-section/index.js","pages/employees/index.js","pages/employe/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","employees","state","action","type","store","initialState","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","makeStore","addEmployees","makeRequest","method","url","data","header","Promise","resolve","reject","request","XMLHttpRequest","open","setRequestHeader","onload","this","status","response","statusText","onerror","send","Logo","href","className","Component","Container","props","children","Menu","Header","Footer","PageWrapper","PageTitle","Dropdown","dropdown","select","refSelect","React","createRef","dropdownToggle","bind","dropdownSelect","windowEvent","setState","addClickOutside","event","preventDefault","currentTarget","innerText","func","current","addEventListener","removeEventListener","contains","target","removeClickOutside","values","name","ref","value","data-selected","onClick","map","element","index","key","Checkbox","onChange","checked","defaultChecked","Filters","sortByName","sortByDate","updateByPost","archive","showAllEmployees","filteredEmployees","orderby","sortByNameASC","sortByNameDESC","sortByDateASC","sortByDateDESC","role","allEmployees","filter","el","newStore","sortByPost","input","length","isArchive","console","log","prevProps","undefined","connect","dispatch","sort","a","b","aa","birthday","split","reverse","join","bb","Card","icon","employe","gender","driverMale","waiter","chefMale","driverFamale","waitres","chefFamale","src","alt","id","phone","Home","PageSection","Employees","Employee","dropdownName","userUpdate","text","querySelector","FormData","append","employee","fetch","body","then","json","translete","onSubmit","placeholder","mask","arr","obj","Object","entries","getEmployeeById","params","location","search","replace","forEach","param","getId","App","path","Boolean","hostname","match","JSON","parse","getEmployees","subscribe","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8cd70794.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/driver-male.3cf59282.svg\";","module.exports = __webpack_public_path__ + \"static/media/driver-famale.684cf633.svg\";","module.exports = __webpack_public_path__ + \"static/media/waiter.46617dfa.svg\";","module.exports = __webpack_public_path__ + \"static/media/waitres.67d6c79f.svg\";","module.exports = __webpack_public_path__ + \"static/media/chef-male.2c338c6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chef-famale.3217df05.svg\";","import {\r\n    createStore,\r\n    combineReducers\r\n} from 'redux';  \r\n\r\nimport employees from './employees/reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({ employees });\r\n\r\n\r\n\r\nconst makeStore = (initialState = {}) => {\r\n    let store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\nexport let store = makeStore();","import * as types from './types';\r\n\r\n\r\n\r\nexport default function reducer(state = {}, action) {\r\n    switch(action.type) {\r\n        case types.ADD_EMPLOYEES:\r\n            return state = {\r\n                ...state,\r\n                employees: action.employees\r\n            }\r\n\r\n        case types.SORT_BY_NAME_ASC:\r\n            return state = {\r\n                ...state,\r\n                employees: action.employees\r\n            }\r\n\r\n        case types.SORT_BY_NAME_DESC:\r\n            return state = {\r\n                ...state,\r\n                employees: action.employees\r\n            }\r\n\r\n        case types.SORT_BY_DATE_ASC:\r\n            return state = {\r\n                ...state,\r\n                employees: action.employees\r\n            }\r\n\r\n        case types.SORT_BY_DATE_DESC:\r\n            return state = {\r\n                ...state,\r\n                employees: action.employees\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const ADD_EMPLOYEES = 'ADD_EMPLOYEES';\r\nexport const SORT_BY_NAME_ASC = 'SORT_BY_NAME_ASC';\r\nexport const SORT_BY_NAME_DESC = 'SORT_BY_NAME_DESC';\r\nexport const SORT_BY_DATE_ASC = 'SORT_BY_DATE_ASC';\r\nexport const SORT_BY_DATE_DESC = 'SORT_BY_DATE_DESC';","import * as types from './types';\r\n  \r\nexport function addEmployees(employees) {\r\n    return {\r\n        type: types.ADD_EMPLOYEES,\r\n        employees\r\n    };\r\n}\r\n\r\nexport function sortByNameASC(employees) {\r\n    employees = employees.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return {\r\n        type: types.SORT_BY_NAME_ASC,\r\n        employees\r\n    };\r\n}\r\n\r\nexport function sortByNameDESC(employees) {\r\n    employees = employees.sort((a, b) => a.name < b.name ? 1 : -1);\r\n    return {\r\n        type: types.SORT_BY_NAME_DESC,\r\n        employees\r\n    };\r\n}\r\n\r\nexport function sortByDateASC(employees) {\r\n    employees = employees.sort(function(a, b){\r\n        var aa = a.birthday.split('.').reverse().join(),\r\n            bb = b.birthday.split('.').reverse().join();\r\n        return aa < bb ? -1 : (aa > bb ? 1 : 0);\r\n    });\r\n    return {\r\n        type: types.SORT_BY_DATE_ASC,\r\n        employees\r\n    };\r\n}\r\n\r\nexport function sortByDateDESC(employees) {\r\n    employees = employees.sort(function(a, b){\r\n        var aa = a.birthday.split('.').reverse().join(),\r\n            bb = b.birthday.split('.').reverse().join();\r\n        return aa > bb ? -1 : (aa < bb ? 1 : 0);\r\n    });\r\n    return {\r\n        type: types.SORT_BY_DATE_DESC,\r\n        employees\r\n    };\r\n}","export default function makeRequest(method, url, data, header) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tlet request = new XMLHttpRequest();\r\n\t\trequest.open(method, url);\r\n\t\t\r\n\t\tif( header ) request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n\t\trequest.onload = function () {\r\n\t\t\tif (this.status >= 200 && this.status < 300) {\r\n\t\t\t\tresolve(request.response);\r\n\t\t\t} else {\r\n\t\t\t\treject({\r\n\t\t\t\t\tstatus: this.status,\r\n\t\t\t\t\tstatusText: request.statusText\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trequest.onerror = function () {\r\n\t\t\treject({\r\n\t\t\t\tstatus: this.status,\r\n\t\t\t\tstatusText: request.statusText\r\n\t\t\t});\r\n\t\t};\r\n\t\trequest.send(data);\r\n\t});\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport './index.scss';\r\n\r\n\r\nexport default class Logo extends Component {\r\n    render() {\r\n        return(\r\n            <a href=\"/\" className=\"logo\">\r\n                Logo\r\n            </a>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss'\r\n\r\nexport default class Container extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">{this.props.children}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss';\r\n\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        return(\r\n            <ul className=\"menu\">\r\n                <li className=\"menu__item\">\r\n                    <a href=\"/\" className=\"menu__link\">Главная</a>\r\n                </li>\r\n                <li className=\"menu__item\">\r\n                    <a href=\"/employees\" className=\"menu__link\">Сотрудники</a>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport 'style/general.scss';\r\nimport './index.scss';\r\n\r\nimport Logo from 'components/logo';\r\nimport Container from 'components/container';\r\nimport Menu from 'components/menu';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return(\r\n            <header className=\"header\">\r\n                <Container>\r\n                    <div className=\"header__wrapper\">\r\n                        <Logo />\r\n\r\n                        <Menu />\r\n                    </div>\r\n                </Container>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss';\r\n\r\nimport Logo from 'components/logo';\r\nimport Container from 'components/container';\r\nimport Menu from 'components/menu';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer className=\"footer\">\r\n                <Container>\r\n                    <div className=\"footer__wrapper\">\r\n                        <Logo />\r\n\r\n                        <Menu />\r\n                    </div>\r\n                </Container>\r\n            </footer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss'\r\n\r\nexport default class PageWrapper extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"page-wrapper\">{this.props.children}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss'\r\n\r\nexport default class PageTitle extends Component {\r\n    render() {\r\n        return(\r\n            <h1 className=\"page-title\">{this.props.children}</h1>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss';\r\n\r\nexport default class Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dropdown: '',\r\n            select: ''\r\n        }\r\n\r\n        this.refSelect = React.createRef();\r\n\r\n        this.dropdownToggle = this.dropdownToggle.bind(this);\r\n        this.dropdownSelect = this.dropdownSelect.bind(this);\r\n        this.windowEvent = this.windowEvent.bind(this);\r\n    }\r\n\r\n    dropdownToggle() {\r\n        if( this.state.dropdown ) {\r\n            this.setState({dropdown: ''});\r\n        } else {\r\n            this.setState({dropdown: 'open'});\r\n            this.addClickOutside();\r\n        }\r\n    }\r\n\r\n    dropdownSelect(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            dropdown: '',\r\n            select: event.currentTarget.innerText\r\n        })\r\n\r\n        this.props.func(event.currentTarget.innerText, this.refSelect.current);\r\n    }\r\n\r\n    addClickOutside() {\r\n        window.addEventListener('click', this.windowEvent);\r\n    }\r\n\r\n    removeClickOutside() {\r\n        window.removeEventListener('click', this.windowEvent);\r\n    }\r\n\r\n    windowEvent(event) {\r\n        if (!this.refSelect.current.contains(event.target)) {\r\n            this.setState({dropdown: ''});\r\n            this.removeClickOutside();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { values, name } = this.props;\r\n\r\n        return(\r\n            <div className=\"custom-select\" ref={this.refSelect}>\r\n                <input type=\"hidden\" name=\"select\" value={name}/>\r\n                <button type=\"button\" className=\"custom-select-header\" data-selected={this.state.select} onClick={this.dropdownToggle}>\r\n                    <span className=\"custom-select-header__option\">{name}</span>\r\n                </button>\r\n\r\n                <div className={\"custom-select-dropdown \"+this.state.dropdown}>\r\n                    {values.map((element, index) => (\r\n                        <div className=\"custom-select-dropdown__item\" key={index}>\r\n                            <a href=\"#dropdown\" className={this.state.select === element ? 'custom-select-dropdown__option active' : 'custom-select-dropdown__option'} onClick={this.dropdownSelect}>{element}</a>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './index.scss';\r\n\r\n\r\nexport default class Checkbox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    onChange(event) {\r\n        let checked = event.target.checked;\r\n        if( this.props.func )\r\n            this.props.func(checked);\r\n    }\r\n    render() {\r\n        const { name, children } = this.props;\r\n\r\n        return(\r\n            <label className=\"checkbox\">\r\n                <input name={name} type=\"checkbox\" className=\"checkbox__input\" onChange={this.onChange} defaultChecked={this.props.checked}/>\r\n                <span className=\"checkbox__text\">{children}</span>\r\n            </label>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addEmployees, sortByNameASC, sortByNameDESC, sortByDateASC, sortByDateDESC } from 'store/employees/actions';\r\n\r\nimport './index.scss';\r\n\r\nimport Dropdown from 'components/dropdown';\r\nimport Checkbox from 'components/checkbox';\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sortByName = this.sortByName.bind(this);\r\n        this.sortByDate = this.sortByDate.bind(this);\r\n        this.updateByPost = this.updateByPost.bind(this);\r\n        this.archive = this.archive.bind(this);\r\n        this.showAllEmployees = this.showAllEmployees.bind(this);\r\n\r\n\r\n        this.filteredEmployees = [];\r\n    }\r\n\r\n    sortByName(orderby) {\r\n        if( orderby === 'ASC' ) this.props.sortByNameASC(this.props.employees);\r\n        if( orderby === 'DESC' ) this.props.sortByNameDESC(this.props.employees);\r\n    }\r\n\r\n    sortByDate(orderby) {\r\n        if( orderby === 'ASC' ) this.props.sortByDateASC(this.props.employees);\r\n        if( orderby === 'DESC' ) this.props.sortByDateDESC(this.props.employees);\r\n    }\r\n\r\n    sortByPost(orderby) {\r\n        let role = '';\r\n        switch(orderby) {\r\n            case 'Повар': role = 'cook'; break;\r\n            case 'Курьер': role = 'driver'; break;\r\n            case 'Официант': role = 'waiter'; break;\r\n            default: break;\r\n        }\r\n        let newArr = this.allEmployees.filter(el => {\r\n            return role === el.role;\r\n        })\r\n        return newArr;\r\n    }\r\n\r\n    updateByPost(orderby) {\r\n        let newStore = this.sortByPost(orderby);\r\n        this.props.addEmployees(newStore);\r\n\r\n        this.filteredEmployees = newStore;\r\n    }\r\n\r\n    archive(input) {\r\n        let arr = this.filteredEmployees.length ? this.filteredEmployees : this.allEmployees;\r\n\r\n        let newStore = arr.filter(el => el.isArchive === input);\r\n        this.props.addEmployees(newStore);\r\n    }\r\n\r\n    showAllEmployees() {\r\n        console.log( this.allEmployees )\r\n        this.props.addEmployees(this.allEmployees);\r\n        this.filteredEmployees = [];\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if( this.allEmployees === undefined )\r\n            this.allEmployees = this.props.employees;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"filter\">\r\n                <button type=\"button\" className=\"reset-filters\" onClick={this.showAllEmployees}>Все</button>\r\n\r\n                <Dropdown values={['ASC', 'DESC']} name={'По алфавиту'} func={this.sortByName}/>\r\n                <Dropdown values={['ASC', 'DESC']} name={'По дате'} func={this.sortByDate}/>\r\n                <Dropdown values={['Повар', 'Курьер', 'Официант']} name={'Должность'} func={this.updateByPost}/>\r\n\r\n                <Checkbox func={this.archive}>В архиве</Checkbox>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    employees: state.employees.employees,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addEmployees: (employees) => dispatch(addEmployees(employees)),\r\n    sortByNameASC: (employees) => dispatch(sortByNameASC(employees)),\r\n    sortByNameDESC: (employees) => dispatch(sortByNameDESC(employees)),\r\n    sortByDateASC: (employees) => dispatch(sortByDateASC(employees)),\r\n    sortByDateDESC: (employees) => dispatch(sortByDateDESC(employees))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);","import React, { Component } from 'react';\r\n\r\nimport './index.scss'\r\n\r\nimport driverMale from 'images/driver-male.svg';\r\nimport driverFamale from 'images/driver-famale.svg';\r\nimport waiter from 'images/waiter.svg';\r\nimport waitres from 'images/waitres.svg';\r\nimport chefMale from 'images/chef-male.svg';\r\nimport chefFamale from 'images/chef-famale.svg';\r\n\r\n\r\n\r\nexport default class Card extends Component {\r\n    render() {\r\n        const { employe } = this.props;\r\n        let icon;\r\n        if(employe.gender === 'male') {\r\n            switch(employe.role) {\r\n                case 'driver':\r\n                    icon = driverMale;\r\n                    break;\r\n                case 'waiter':\r\n                    icon = waiter;\r\n                    break;\r\n                case 'cook':\r\n                    icon = chefMale;\r\n                    break;\r\n                default: break;\r\n            }\r\n        } else {\r\n            switch(employe.role) {\r\n                case 'driver':\r\n                    icon = driverFamale;\r\n                    break;\r\n                case 'waiter':\r\n                    icon = waitres;\r\n                    break;\r\n                case 'cook':\r\n                    icon = chefFamale;\r\n                    break;\r\n                default: break;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={icon} className=\"card__icon\" alt=\"user-icon\" />\r\n                <div className=\"card__row\">\r\n                    <span className=\"card__role\">{employe.role}</span>\r\n                </div>\r\n                <div className=\"card__row\">\r\n                    <a href={'/employee?id='+employe.id} className=\"card__name\">{employe.name}</a>\r\n                </div>\r\n                <div className=\"card__row\">\r\n                    <a href={'tel:'+employe.phone} className=\"card__phone\">{employe.phone}</a>\r\n                    <span className=\"card__birthday\">{employe.birthday}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport './index.scss';\r\n\r\nimport Container from 'components/container';\r\nimport PageTitle from 'components/page-title';\r\nimport Filters from 'components/filters';\r\nimport Card from 'components/card';\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const { employees } = this.props.employees\r\n\r\n        return(\r\n            <section className=\"page\">\r\n                <Container>\r\n                    <PageTitle>ПиццаФабрика</PageTitle>\r\n\r\n                    <div className=\"content\">\r\n                        <div className=\"content-text\">\r\n                            <p><span className=\"main-color\">ПиццаФабрика</span> - это сеть семейных кафе и пиццерий с доставкой, предлагающая клиентам популярные блюда современной кухни: пицца, роллы, лапша WOK. Главные наши преимущества – собственная облачная система автоматизации и то, что мы кормим клиентов по любому поводу (помимо основного меню, бизнес-ланчи, вечернее и детское меню). Наши производственные мощности всегда загружены работой!</p>\r\n\r\n                            <h2>Сотрудники</h2>\r\n                        </div>\r\n\r\n                        <Filters />\r\n\r\n                        <div className=\"employees\">\r\n                            {employees ? (\r\n                                <>\r\n                                    {employees.map((employe, index) =>\r\n                                        <Card employe={employe} key={index} />\r\n                                    )}\r\n                                </>\r\n                            ): (\r\n                                <div>loading...</div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        employees: state.employees\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home)","import React, { Component } from 'react';\r\n\r\nimport './index.scss'\r\n\r\nexport default class PageSection extends Component {\r\n    render() {\r\n        return(\r\n            <section className=\"page\">{this.props.children}</section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nimport Container from 'components/container';\r\nimport PageSection from 'components/page-section';\r\nimport PageTitle from 'components/page-title';\r\nimport Filters from 'components/filters';\r\nimport Card from 'components/card';\r\n\r\nclass Employees extends Component {\r\n    render() {\r\n        const { employees } = this.props.employees\r\n        return(\r\n            <PageSection>\r\n                <Container>\r\n                    <PageTitle>Сотрудники</PageTitle>\r\n\r\n                    <Filters />\r\n\r\n                    <div className=\"employees\">\r\n                        {employees ? (\r\n                            <>\r\n                                {employees.map((employe, index) =>\r\n                                    <Card employe={employe} key={index} />\r\n                                )}\r\n                            </>\r\n                        ): (\r\n                            <div>loading...</div>\r\n                        )}\r\n                    </div>\r\n                </Container>\r\n            </PageSection>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        employees: state.employees\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Employees)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport './index.scss';\r\n\r\nimport Container from 'components/container';\r\nimport PageSection from 'components/page-section';\r\nimport PageTitle from 'components/page-title';\r\nimport Dropdown from 'components/dropdown';\r\nimport Checkbox from 'components/checkbox';\r\n\r\nclass Employee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dropdownName = this.dropdownName.bind(this);\r\n        this.userUpdate = this.userUpdate.bind(this);\r\n    }\r\n    dropdownName(text, target) {\r\n        target.querySelector('.custom-select-header__option').innerText = text\r\n    }\r\n    translete(role) {\r\n        switch(role) {\r\n            case 'driver':\r\n                return 'Водитель';\r\n            case 'waiter':\r\n                return 'Официант';\r\n            case 'cook':\r\n                return 'Повар';\r\n            default:\r\n                return 'ошибка';\r\n        }\r\n    }\r\n    async userUpdate(event) {\r\n        event.preventDefault();\r\n        let data = new FormData(event.target);\r\n        data.append('userId', this.props.store.employee.id)\r\n\r\n        let response = await fetch('api/employees.json', {\r\n            method: 'PUT',\r\n            body: data\r\n        }).then(response => response.json());\r\n        console.log(response)\r\n    }\r\n    render() {\r\n        const { employee } = this.props.store;\r\n\r\n        let role = this.translete(employee.role);\r\n\r\n\r\n        return(\r\n            <PageSection>\r\n                <Container>\r\n                    <PageTitle>Редактировать сотрудника</PageTitle>\r\n\r\n\r\n                    {employee ?\r\n                        <form className=\"edit-form\" onSubmit={this.userUpdate}>\r\n                            <div className=\"edit-form__row\">\r\n                                <div className=\"field\">\r\n                                    <p className=\"field__name\">Имя</p>\r\n                                    <input name=\"employee-name\" type=\"text\" className=\"field__input\" placeholder={employee.name} />\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <p className=\"field__name\">Должность</p>\r\n                                    <Dropdown values={['Водитель', 'Повар', 'Официант']} name={role} func={this.dropdownName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"edit-form__row\">\r\n                                <div className=\"field\">\r\n                                    <p className=\"field__name\">Телефон</p>\r\n                                    <InputMask name=\"employee-phone\" className=\"field__input\" mask=\"+7 (999) 999-99-99\" placeholder={employee.phone} />\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <p className=\"field__name\">Дата рождения</p>\r\n                                    <input name=\"employee-birthday\" type=\"date\" className=\"field__input\" placeholder={employee.birthday} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"edit-form__row\">\r\n                                <div className=\"field field--center\">\r\n                                    <Checkbox name=\"archive\" checked={employee.isArchive}>В архиве</Checkbox>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"edit-form__row\">\r\n                                <div className=\"field field--center\">\r\n                                    <input type=\"submit\" className=\"field__submit\" value=\"Сохранить\" />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    : null}\r\n                </Container>\r\n            </PageSection>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getId() {\r\n    let params = window.location.search.replace('?', '').split('&');\r\n    let value = '';\r\n    params.forEach(el => {\r\n        let param = el.split('=');\r\n        if( param[0] === 'id' ) {\r\n            value = param[1];\r\n        }\r\n    })\r\n    return value;\r\n}\r\n\r\nfunction getEmployeeById(id, arr) {\r\n    let obj = {};\r\n    if( arr ) {\r\n        for(const [index, key] of Object.entries(arr)) {\r\n            if( key.id === id && index ) {\r\n                obj = key\r\n                return obj\r\n            }\r\n        }\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    let employee\r\n\r\n    if( state.employees ) employee = getEmployeeById( +getId(), state.employees.employees )\r\n    return {\r\n        store: {\r\n            employee\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Employee)","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nimport Header from 'components/header';\nimport Footer from 'components/footer';\nimport PageWrapper from 'components/page-wrapper';\nimport Home from 'pages/main-page';\nimport Employees from 'pages/employees';\nimport Employe from 'pages/employe';\n\n\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<PageWrapper>\n\t\t\t\t<Header />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/employees\">\n\t\t\t\t\t\t<Employees />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/employee\">\n\t\t\t\t\t\t<Employe />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</PageWrapper>\n\n\t\t\t<Footer />\n\t\t</Router>\n\t)\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'store/index';\nimport { addEmployees } from 'store/employees/actions';\n\nimport makeRequest from 'services/make-request';\n\n\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\n\nasync function getEmployees() {\n\tlet request = {\n        method: 'GET',\n        employees: {\n            url: '/api/employees.json'\n        }\n    }\n\n\tlet json = await makeRequest(request.method, request.employees.url, {}, true);\n\n    let employees = JSON.parse(json);\n\n    store.dispatch(addEmployees(employees));\n}\n\ngetEmployees();\n\nstore.subscribe(() => {\n    // console.log(store.getState())\n})\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}